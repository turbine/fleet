// Code generated by protoc-gen-gogo.
// source: github.com/coreos/fleet/protobuf/fleet.proto
// DO NOT EDIT!

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	github.com/coreos/fleet/protobuf/fleet.proto

It has these top-level messages:
	HealthCheckRequest
	HealthCheckResponse
	MachineProperties
	UpdatedState
	UnitStateFilter
	UnitFilter
	ScheduleUnitRequest
	UnscheduleUnitRequest
	SaveUnitStateRequest
	Heartbeat
	GenericReply
	Units
	UnitStates
	UnitState
	ScheduledUnits
	ScheduledUnit
	UnitName
	Unit
	MaybeScheduledUnit
	MaybeUnit
	NotFound
	UnitFile
	UnitOption
*/
package rpc

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type TargetState int32

const (
	TargetState_INACTIVE TargetState = 0
	TargetState_LOADED   TargetState = 1
	TargetState_LAUNCHED TargetState = 2
)

var TargetState_name = map[int32]string{
	0: "INACTIVE",
	1: "LOADED",
	2: "LAUNCHED",
}
var TargetState_value = map[string]int32{
	"INACTIVE": 0,
	"LOADED":   1,
	"LAUNCHED": 2,
}

func (x TargetState) String() string {
	return proto.EnumName(TargetState_name, int32(x))
}
func (TargetState) EnumDescriptor() ([]byte, []int) { return fileDescriptorFleet, []int{0} }

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

var HealthCheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
}
var HealthCheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":     0,
	"SERVING":     1,
	"NOT_SERVING": 2,
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return proto.EnumName(HealthCheckResponse_ServingStatus_name, int32(x))
}
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorFleet, []int{1, 0}
}

type HealthCheckRequest struct {
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (m *HealthCheckRequest) Reset()                    { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string            { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()               {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{0} }

type HealthCheckResponse struct {
	Status HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=rpc.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
}

func (m *HealthCheckResponse) Reset()                    { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string            { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()               {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{1} }

type MachineProperties struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MachineProperties) Reset()                    { *m = MachineProperties{} }
func (m *MachineProperties) String() string            { return proto.CompactTextString(m) }
func (*MachineProperties) ProtoMessage()               {}
func (*MachineProperties) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{2} }

type UpdatedState struct {
	UnitIds []string `protobuf:"bytes,1,rep,name=unit_ids,json=unitIds" json:"unit_ids,omitempty"`
}

func (m *UpdatedState) Reset()                    { *m = UpdatedState{} }
func (m *UpdatedState) String() string            { return proto.CompactTextString(m) }
func (*UpdatedState) ProtoMessage()               {}
func (*UpdatedState) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{3} }

type UnitStateFilter struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash        string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	LoadState   string `protobuf:"bytes,3,opt,name=load_state,json=loadState,proto3" json:"load_state,omitempty"`
	ActiveState string `protobuf:"bytes,4,opt,name=active_state,json=activeState,proto3" json:"active_state,omitempty"`
	SubState    string `protobuf:"bytes,5,opt,name=sub_state,json=subState,proto3" json:"sub_state,omitempty"`
	MachineID   string `protobuf:"bytes,6,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (m *UnitStateFilter) Reset()                    { *m = UnitStateFilter{} }
func (m *UnitStateFilter) String() string            { return proto.CompactTextString(m) }
func (*UnitStateFilter) ProtoMessage()               {}
func (*UnitStateFilter) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{4} }

type UnitFilter struct {
	MachineID string `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (m *UnitFilter) Reset()                    { *m = UnitFilter{} }
func (m *UnitFilter) String() string            { return proto.CompactTextString(m) }
func (*UnitFilter) ProtoMessage()               {}
func (*UnitFilter) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{5} }

type ScheduleUnitRequest struct {
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MachineID string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (m *ScheduleUnitRequest) Reset()                    { *m = ScheduleUnitRequest{} }
func (m *ScheduleUnitRequest) String() string            { return proto.CompactTextString(m) }
func (*ScheduleUnitRequest) ProtoMessage()               {}
func (*ScheduleUnitRequest) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{6} }

type UnscheduleUnitRequest struct {
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MachineID string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (m *UnscheduleUnitRequest) Reset()                    { *m = UnscheduleUnitRequest{} }
func (m *UnscheduleUnitRequest) String() string            { return proto.CompactTextString(m) }
func (*UnscheduleUnitRequest) ProtoMessage()               {}
func (*UnscheduleUnitRequest) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{7} }

type SaveUnitStateRequest struct {
	Name  string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State *UnitState `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	TTL   int32      `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (m *SaveUnitStateRequest) Reset()                    { *m = SaveUnitStateRequest{} }
func (m *SaveUnitStateRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveUnitStateRequest) ProtoMessage()               {}
func (*SaveUnitStateRequest) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{8} }

func (m *SaveUnitStateRequest) GetState() *UnitState {
	if m != nil {
		return m.State
	}
	return nil
}

type Heartbeat struct {
	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MachineID string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	TTL       int32  `protobuf:"varint,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (m *Heartbeat) Reset()                    { *m = Heartbeat{} }
func (m *Heartbeat) String() string            { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()               {}
func (*Heartbeat) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{9} }

type GenericReply struct {
}

func (m *GenericReply) Reset()                    { *m = GenericReply{} }
func (m *GenericReply) String() string            { return proto.CompactTextString(m) }
func (*GenericReply) ProtoMessage()               {}
func (*GenericReply) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{10} }

type Units struct {
	Units []Unit `protobuf:"bytes,1,rep,name=units" json:"units"`
}

func (m *Units) Reset()                    { *m = Units{} }
func (m *Units) String() string            { return proto.CompactTextString(m) }
func (*Units) ProtoMessage()               {}
func (*Units) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{11} }

func (m *Units) GetUnits() []Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

type UnitStates struct {
	UnitStates []*UnitState `protobuf:"bytes,1,rep,name=unit_states,json=unitStates" json:"unit_states,omitempty"`
}

func (m *UnitStates) Reset()                    { *m = UnitStates{} }
func (m *UnitStates) String() string            { return proto.CompactTextString(m) }
func (*UnitStates) ProtoMessage()               {}
func (*UnitStates) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{12} }

func (m *UnitStates) GetUnitStates() []*UnitState {
	if m != nil {
		return m.UnitStates
	}
	return nil
}

type UnitState struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash        string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	LoadState   string `protobuf:"bytes,3,opt,name=load_state,json=loadState,proto3" json:"load_state,omitempty"`
	ActiveState string `protobuf:"bytes,4,opt,name=active_state,json=activeState,proto3" json:"active_state,omitempty"`
	SubState    string `protobuf:"bytes,5,opt,name=sub_state,json=subState,proto3" json:"sub_state,omitempty"`
	MachineID   string `protobuf:"bytes,6,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (m *UnitState) Reset()                    { *m = UnitState{} }
func (m *UnitState) String() string            { return proto.CompactTextString(m) }
func (*UnitState) ProtoMessage()               {}
func (*UnitState) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{13} }

type ScheduledUnits struct {
	Units []ScheduledUnit `protobuf:"bytes,1,rep,name=units" json:"units"`
}

func (m *ScheduledUnits) Reset()                    { *m = ScheduledUnits{} }
func (m *ScheduledUnits) String() string            { return proto.CompactTextString(m) }
func (*ScheduledUnits) ProtoMessage()               {}
func (*ScheduledUnits) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{14} }

func (m *ScheduledUnits) GetUnits() []ScheduledUnit {
	if m != nil {
		return m.Units
	}
	return nil
}

type ScheduledUnit struct {
	Name         string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CurrentState TargetState `protobuf:"varint,2,opt,name=current_state,json=currentState,proto3,enum=rpc.TargetState" json:"current_state,omitempty"`
	MachineID    string      `protobuf:"bytes,3,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (m *ScheduledUnit) Reset()                    { *m = ScheduledUnit{} }
func (m *ScheduledUnit) String() string            { return proto.CompactTextString(m) }
func (*ScheduledUnit) ProtoMessage()               {}
func (*ScheduledUnit) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{15} }

type UnitName struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *UnitName) Reset()                    { *m = UnitName{} }
func (m *UnitName) String() string            { return proto.CompactTextString(m) }
func (*UnitName) ProtoMessage()               {}
func (*UnitName) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{16} }

type Unit struct {
	Name         string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Unit         UnitFile    `protobuf:"bytes,2,opt,name=unit" json:"unit"`
	DesiredState TargetState `protobuf:"varint,3,opt,name=desired_state,json=desiredState,proto3,enum=rpc.TargetState" json:"desired_state,omitempty"`
}

func (m *Unit) Reset()                    { *m = Unit{} }
func (m *Unit) String() string            { return proto.CompactTextString(m) }
func (*Unit) ProtoMessage()               {}
func (*Unit) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{17} }

func (m *Unit) GetUnit() UnitFile {
	if m != nil {
		return m.Unit
	}
	return UnitFile{}
}

type MaybeScheduledUnit struct {
	// Types that are valid to be assigned to IsScheduled:
	//	*MaybeScheduledUnit_Unit
	//	*MaybeScheduledUnit_Notfound
	IsScheduled isMaybeScheduledUnit_IsScheduled `protobuf_oneof:"is_scheduled"`
}

func (m *MaybeScheduledUnit) Reset()                    { *m = MaybeScheduledUnit{} }
func (m *MaybeScheduledUnit) String() string            { return proto.CompactTextString(m) }
func (*MaybeScheduledUnit) ProtoMessage()               {}
func (*MaybeScheduledUnit) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{18} }

type isMaybeScheduledUnit_IsScheduled interface {
	isMaybeScheduledUnit_IsScheduled()
}

type MaybeScheduledUnit_Unit struct {
	Unit *ScheduledUnit `protobuf:"bytes,1,opt,name=unit,oneof"`
}
type MaybeScheduledUnit_Notfound struct {
	Notfound *NotFound `protobuf:"bytes,2,opt,name=notfound,oneof"`
}

func (*MaybeScheduledUnit_Unit) isMaybeScheduledUnit_IsScheduled()     {}
func (*MaybeScheduledUnit_Notfound) isMaybeScheduledUnit_IsScheduled() {}

func (m *MaybeScheduledUnit) GetIsScheduled() isMaybeScheduledUnit_IsScheduled {
	if m != nil {
		return m.IsScheduled
	}
	return nil
}

func (m *MaybeScheduledUnit) GetUnit() *ScheduledUnit {
	if x, ok := m.GetIsScheduled().(*MaybeScheduledUnit_Unit); ok {
		return x.Unit
	}
	return nil
}

func (m *MaybeScheduledUnit) GetNotfound() *NotFound {
	if x, ok := m.GetIsScheduled().(*MaybeScheduledUnit_Notfound); ok {
		return x.Notfound
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MaybeScheduledUnit) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MaybeScheduledUnit_OneofMarshaler, _MaybeScheduledUnit_OneofUnmarshaler, _MaybeScheduledUnit_OneofSizer, []interface{}{
		(*MaybeScheduledUnit_Unit)(nil),
		(*MaybeScheduledUnit_Notfound)(nil),
	}
}

func _MaybeScheduledUnit_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MaybeScheduledUnit)
	// is_scheduled
	switch x := m.IsScheduled.(type) {
	case *MaybeScheduledUnit_Unit:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Unit); err != nil {
			return err
		}
	case *MaybeScheduledUnit_Notfound:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Notfound); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MaybeScheduledUnit.IsScheduled has unexpected type %T", x)
	}
	return nil
}

func _MaybeScheduledUnit_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MaybeScheduledUnit)
	switch tag {
	case 1: // is_scheduled.unit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ScheduledUnit)
		err := b.DecodeMessage(msg)
		m.IsScheduled = &MaybeScheduledUnit_Unit{msg}
		return true, err
	case 2: // is_scheduled.notfound
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NotFound)
		err := b.DecodeMessage(msg)
		m.IsScheduled = &MaybeScheduledUnit_Notfound{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MaybeScheduledUnit_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MaybeScheduledUnit)
	// is_scheduled
	switch x := m.IsScheduled.(type) {
	case *MaybeScheduledUnit_Unit:
		s := proto.Size(x.Unit)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MaybeScheduledUnit_Notfound:
		s := proto.Size(x.Notfound)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MaybeUnit struct {
	// Types that are valid to be assigned to HasUnit:
	//	*MaybeUnit_Unit
	//	*MaybeUnit_Notfound
	HasUnit isMaybeUnit_HasUnit `protobuf_oneof:"has_unit"`
}

func (m *MaybeUnit) Reset()                    { *m = MaybeUnit{} }
func (m *MaybeUnit) String() string            { return proto.CompactTextString(m) }
func (*MaybeUnit) ProtoMessage()               {}
func (*MaybeUnit) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{19} }

type isMaybeUnit_HasUnit interface {
	isMaybeUnit_HasUnit()
}

type MaybeUnit_Unit struct {
	Unit *Unit `protobuf:"bytes,1,opt,name=unit,oneof"`
}
type MaybeUnit_Notfound struct {
	Notfound *NotFound `protobuf:"bytes,2,opt,name=notfound,oneof"`
}

func (*MaybeUnit_Unit) isMaybeUnit_HasUnit()     {}
func (*MaybeUnit_Notfound) isMaybeUnit_HasUnit() {}

func (m *MaybeUnit) GetHasUnit() isMaybeUnit_HasUnit {
	if m != nil {
		return m.HasUnit
	}
	return nil
}

func (m *MaybeUnit) GetUnit() *Unit {
	if x, ok := m.GetHasUnit().(*MaybeUnit_Unit); ok {
		return x.Unit
	}
	return nil
}

func (m *MaybeUnit) GetNotfound() *NotFound {
	if x, ok := m.GetHasUnit().(*MaybeUnit_Notfound); ok {
		return x.Notfound
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MaybeUnit) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MaybeUnit_OneofMarshaler, _MaybeUnit_OneofUnmarshaler, _MaybeUnit_OneofSizer, []interface{}{
		(*MaybeUnit_Unit)(nil),
		(*MaybeUnit_Notfound)(nil),
	}
}

func _MaybeUnit_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MaybeUnit)
	// has_unit
	switch x := m.HasUnit.(type) {
	case *MaybeUnit_Unit:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Unit); err != nil {
			return err
		}
	case *MaybeUnit_Notfound:
		_ = b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Notfound); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MaybeUnit.HasUnit has unexpected type %T", x)
	}
	return nil
}

func _MaybeUnit_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MaybeUnit)
	switch tag {
	case 1: // has_unit.unit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Unit)
		err := b.DecodeMessage(msg)
		m.HasUnit = &MaybeUnit_Unit{msg}
		return true, err
	case 2: // has_unit.notfound
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NotFound)
		err := b.DecodeMessage(msg)
		m.HasUnit = &MaybeUnit_Notfound{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MaybeUnit_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MaybeUnit)
	// has_unit
	switch x := m.HasUnit.(type) {
	case *MaybeUnit_Unit:
		s := proto.Size(x.Unit)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MaybeUnit_Notfound:
		s := proto.Size(x.Notfound)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NotFound struct {
}

func (m *NotFound) Reset()                    { *m = NotFound{} }
func (m *NotFound) String() string            { return proto.CompactTextString(m) }
func (*NotFound) ProtoMessage()               {}
func (*NotFound) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{20} }

type UnitFile struct {
	UnitOptions []UnitOption `protobuf:"bytes,1,rep,name=unit_options,json=unitOptions" json:"unit_options"`
}

func (m *UnitFile) Reset()                    { *m = UnitFile{} }
func (m *UnitFile) String() string            { return proto.CompactTextString(m) }
func (*UnitFile) ProtoMessage()               {}
func (*UnitFile) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{21} }

func (m *UnitFile) GetUnitOptions() []UnitOption {
	if m != nil {
		return m.UnitOptions
	}
	return nil
}

type UnitOption struct {
	Section string `protobuf:"bytes,1,opt,name=section,proto3" json:"section,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value   string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *UnitOption) Reset()                    { *m = UnitOption{} }
func (m *UnitOption) String() string            { return proto.CompactTextString(m) }
func (*UnitOption) ProtoMessage()               {}
func (*UnitOption) Descriptor() ([]byte, []int) { return fileDescriptorFleet, []int{22} }

func init() {
	proto.RegisterType((*HealthCheckRequest)(nil), "rpc.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "rpc.HealthCheckResponse")
	proto.RegisterType((*MachineProperties)(nil), "rpc.MachineProperties")
	proto.RegisterType((*UpdatedState)(nil), "rpc.UpdatedState")
	proto.RegisterType((*UnitStateFilter)(nil), "rpc.UnitStateFilter")
	proto.RegisterType((*UnitFilter)(nil), "rpc.UnitFilter")
	proto.RegisterType((*ScheduleUnitRequest)(nil), "rpc.ScheduleUnitRequest")
	proto.RegisterType((*UnscheduleUnitRequest)(nil), "rpc.UnscheduleUnitRequest")
	proto.RegisterType((*SaveUnitStateRequest)(nil), "rpc.SaveUnitStateRequest")
	proto.RegisterType((*Heartbeat)(nil), "rpc.Heartbeat")
	proto.RegisterType((*GenericReply)(nil), "rpc.GenericReply")
	proto.RegisterType((*Units)(nil), "rpc.Units")
	proto.RegisterType((*UnitStates)(nil), "rpc.UnitStates")
	proto.RegisterType((*UnitState)(nil), "rpc.UnitState")
	proto.RegisterType((*ScheduledUnits)(nil), "rpc.ScheduledUnits")
	proto.RegisterType((*ScheduledUnit)(nil), "rpc.ScheduledUnit")
	proto.RegisterType((*UnitName)(nil), "rpc.UnitName")
	proto.RegisterType((*Unit)(nil), "rpc.Unit")
	proto.RegisterType((*MaybeScheduledUnit)(nil), "rpc.MaybeScheduledUnit")
	proto.RegisterType((*MaybeUnit)(nil), "rpc.MaybeUnit")
	proto.RegisterType((*NotFound)(nil), "rpc.NotFound")
	proto.RegisterType((*UnitFile)(nil), "rpc.UnitFile")
	proto.RegisterType((*UnitOption)(nil), "rpc.UnitOption")
	proto.RegisterEnum("rpc.TargetState", TargetState_name, TargetState_value)
	proto.RegisterEnum("rpc.HealthCheckResponse_ServingStatus", HealthCheckResponse_ServingStatus_name, HealthCheckResponse_ServingStatus_value)
}

func init() { proto.RegisterFile("github.com/coreos/fleet/protobuf/fleet.proto", fileDescriptorFleet) }

var fileDescriptorFleet = []byte{
	// 1091 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x56, 0xd9, 0x6e, 0x1b, 0x55,
	0x18, 0xce, 0x78, 0x8b, 0xfd, 0x7b, 0xed, 0x49, 0xa0, 0x4e, 0x10, 0x0d, 0x0c, 0x4b, 0x4b, 0x29,
	0x0e, 0x72, 0x55, 0x04, 0xa9, 0x0a, 0x24, 0x71, 0x16, 0x8b, 0xd4, 0xa9, 0xc6, 0x49, 0x2b, 0xae,
	0xac, 0xf1, 0xcc, 0x1f, 0x7b, 0xd4, 0xc9, 0x8c, 0x99, 0x73, 0x26, 0x52, 0xe0, 0x05, 0xb8, 0xe5,
	0x8d, 0xb8, 0x42, 0x5c, 0xf2, 0x04, 0x91, 0xe8, 0x7b, 0x20, 0xa1, 0xb3, 0xcc, 0x78, 0xc6, 0x9d,
	0x36, 0x15, 0x82, 0x0b, 0xee, 0xce, 0xbf, 0x7c, 0xe7, 0xdf, 0xbe, 0xb3, 0xc0, 0xbd, 0x89, 0xc3,
	0xa6, 0xe1, 0xb8, 0x63, 0xf9, 0xe7, 0x9b, 0x96, 0x1f, 0xa0, 0x4f, 0x37, 0xcf, 0x5c, 0x44, 0xb6,
	0x39, 0x0b, 0x7c, 0xe6, 0x8f, 0xc3, 0x33, 0x29, 0x76, 0x84, 0x48, 0xf2, 0xc1, 0xcc, 0x5a, 0xff,
	0x2c, 0x01, 0x99, 0xf8, 0x13, 0x7f, 0xee, 0xca, 0x25, 0x21, 0x88, 0x95, 0xc4, 0xe8, 0x1d, 0x20,
	0x87, 0x68, 0xba, 0x6c, 0xba, 0x3b, 0x45, 0xeb, 0xb9, 0x81, 0x3f, 0x84, 0x48, 0x19, 0x69, 0xc3,
	0x32, 0xc5, 0xe0, 0xc2, 0xb1, 0xb0, 0xad, 0xbd, 0xa7, 0xdd, 0xa9, 0x18, 0x91, 0xa8, 0xff, 0xa2,
	0xc1, 0x4a, 0x0a, 0x40, 0x67, 0xbe, 0x47, 0x91, 0x7c, 0x0d, 0x25, 0xca, 0x4c, 0x16, 0x52, 0x01,
	0x68, 0x74, 0x3f, 0xee, 0x04, 0x33, 0xab, 0x93, 0xe1, 0xd9, 0x19, 0xf2, 0x9d, 0xbc, 0xc9, 0x50,
	0x78, 0x1b, 0x0a, 0xa5, 0x6f, 0x41, 0x3d, 0x65, 0x20, 0x55, 0x58, 0x3e, 0x1d, 0x7c, 0x37, 0x38,
	0x7e, 0x36, 0x68, 0x2d, 0x71, 0x61, 0xb8, 0x67, 0x3c, 0xed, 0x0f, 0x0e, 0x5a, 0x1a, 0x69, 0x42,
	0x75, 0x70, 0x7c, 0x32, 0x8a, 0x14, 0x39, 0xfd, 0x03, 0xb8, 0xf1, 0xd8, 0xb4, 0xa6, 0x8e, 0x87,
	0x4f, 0x02, 0x7f, 0x86, 0x01, 0x73, 0x90, 0x92, 0x06, 0xe4, 0x1c, 0x5b, 0x65, 0x9f, 0x73, 0x6c,
	0xfd, 0x13, 0xa8, 0x9d, 0xce, 0x6c, 0x93, 0xa1, 0xcd, 0x03, 0x20, 0x59, 0x83, 0x72, 0xe8, 0x39,
	0x6c, 0xe4, 0xd8, 0x3c, 0xe5, 0x3c, 0xaf, 0x91, 0xcb, 0x7d, 0x9b, 0xea, 0xbf, 0x69, 0xd0, 0x3c,
	0xf5, 0x1c, 0x26, 0x1c, 0xf7, 0x1d, 0x97, 0x61, 0x40, 0x08, 0x14, 0x3c, 0xf3, 0x3c, 0x6a, 0x87,
	0x58, 0x73, 0xdd, 0xd4, 0xa4, 0xd3, 0x76, 0x4e, 0xea, 0xf8, 0x9a, 0xbc, 0x0b, 0xe0, 0xfa, 0xa6,
	0x3d, 0xe2, 0x65, 0x61, 0x3b, 0x2f, 0x2c, 0x15, 0xae, 0x91, 0x51, 0xdf, 0x87, 0x9a, 0x69, 0x31,
	0xe7, 0x02, 0x95, 0x43, 0x41, 0x38, 0x54, 0xa5, 0x4e, 0xba, 0xbc, 0x03, 0x15, 0x1a, 0x8e, 0x95,
	0xbd, 0x28, 0xec, 0x65, 0x1a, 0x8e, 0xa5, 0xf1, 0x1e, 0xc0, 0xb9, 0x2c, 0x75, 0xe4, 0xd8, 0xed,
	0x12, 0xb7, 0xee, 0xd4, 0x5f, 0x5c, 0x6d, 0x54, 0x54, 0x03, 0xfa, 0x3d, 0xa3, 0xa2, 0x1c, 0xfa,
	0xb6, 0xbe, 0x05, 0xc0, 0xeb, 0x50, 0x25, 0xa4, 0xb1, 0xda, 0x35, 0xd8, 0x67, 0xb0, 0x32, 0xb4,
	0xa6, 0x68, 0x87, 0x2e, 0xf2, 0x3d, 0x22, 0x66, 0x64, 0xf5, 0x21, 0xbd, 0x71, 0xee, 0x9a, 0x8d,
	0xbf, 0x87, 0xb7, 0x4e, 0x3d, 0xfa, 0x9f, 0x6c, 0xfd, 0x1c, 0x56, 0x87, 0xe6, 0x05, 0xc6, 0xb3,
	0x7b, 0xdd, 0xce, 0x1f, 0x42, 0x51, 0xb6, 0x98, 0x6f, 0x5a, 0xed, 0x36, 0x04, 0x5f, 0xe7, 0x48,
	0x69, 0x24, 0x6b, 0x90, 0x67, 0xcc, 0x15, 0x73, 0x2c, 0xee, 0x2c, 0xbf, 0xb8, 0xda, 0xc8, 0x9f,
	0x9c, 0x1c, 0x19, 0x5c, 0xa7, 0x4f, 0xa1, 0x72, 0x88, 0x66, 0xc0, 0xc6, 0x68, 0xfe, 0x0b, 0xb9,
	0xbf, 0x2e, 0x52, 0x03, 0x6a, 0x07, 0xe8, 0x61, 0xe0, 0x58, 0x06, 0xce, 0xdc, 0x4b, 0xbd, 0x03,
	0x45, 0x9e, 0x28, 0x25, 0x1f, 0x41, 0x91, 0x73, 0x56, 0x12, 0xb8, 0xda, 0xad, 0xc4, 0x35, 0xec,
	0x14, 0x7e, 0xbf, 0xda, 0x58, 0x32, 0xa4, 0x55, 0x7f, 0x24, 0x69, 0x20, 0x0a, 0xa3, 0x64, 0x13,
	0xaa, 0x82, 0xf8, 0xa2, 0xc0, 0x08, 0xba, 0x58, 0x3e, 0x84, 0x31, 0x40, 0xff, 0x55, 0x83, 0x4a,
	0x6c, 0xf9, 0x7f, 0x1e, 0x84, 0x6f, 0xa1, 0x11, 0x91, 0xd9, 0x96, 0xad, 0xeb, 0xa4, 0x5b, 0x47,
	0x44, 0xfd, 0x29, 0x9f, 0x74, 0x0f, 0x7f, 0xd6, 0xa0, 0x9e, 0x32, 0x67, 0x36, 0xe2, 0x01, 0xd4,
	0xad, 0x30, 0x08, 0xd0, 0x53, 0xed, 0x15, 0x1d, 0x69, 0x74, 0x5b, 0x62, 0xf7, 0x13, 0x33, 0x98,
	0xa0, 0xea, 0x6f, 0x4d, 0xb9, 0x65, 0x15, 0x93, 0xbf, 0xa6, 0x98, 0x5b, 0x50, 0xe6, 0x09, 0x0c,
	0x54, 0xe7, 0x17, 0x93, 0xd0, 0x7f, 0x84, 0xc2, 0x2b, 0x13, 0xbc, 0x0d, 0x05, 0x5e, 0x8f, 0x22,
	0x7d, 0x3d, 0x9e, 0xfa, 0xbe, 0xe3, 0xa2, 0x2a, 0x58, 0x38, 0xf0, 0x4a, 0x6c, 0xa4, 0x4e, 0x80,
	0xc9, 0x09, 0x66, 0x56, 0xa2, 0xdc, 0x84, 0xa4, 0xff, 0x04, 0xe4, 0xb1, 0x79, 0x39, 0xc6, 0x74,
	0xab, 0xee, 0xa8, 0xa8, 0x9a, 0x88, 0x9a, 0xd1, 0xeb, 0xc3, 0x28, 0xec, 0xa7, 0x50, 0xf6, 0x7c,
	0x76, 0xe6, 0x87, 0x9e, 0x9d, 0xca, 0x71, 0xe0, 0xb3, 0x7d, 0xae, 0x3c, 0x5c, 0x32, 0x62, 0x87,
	0x9d, 0x06, 0xd4, 0x1c, 0x3a, 0x8a, 0xae, 0x12, 0x5b, 0x47, 0xa8, 0x88, 0xe0, 0x22, 0xe6, 0x46,
	0x2a, 0xe6, 0xfc, 0x68, 0xfc, 0xb3, 0x50, 0x00, 0xe5, 0xa9, 0x49, 0x47, 0x1c, 0xa8, 0x03, 0x94,
	0x23, 0x1f, 0xbd, 0x27, 0x67, 0xc1, 0xdb, 0x47, 0xbe, 0x84, 0x9a, 0x38, 0x58, 0xfe, 0x8c, 0x39,
	0xbe, 0x17, 0x31, 0xab, 0x19, 0x47, 0x3e, 0x16, 0x7a, 0xd5, 0x65, 0x71, 0x06, 0xa5, 0x86, 0xea,
	0x4f, 0xe4, 0x01, 0x95, 0xa2, 0x7c, 0x7c, 0x2d, 0xbe, 0x9c, 0x3f, 0xbe, 0x42, 0x8c, 0x27, 0x9a,
	0x4b, 0x4c, 0x74, 0x15, 0x8a, 0x17, 0xa6, 0x1b, 0x46, 0x47, 0x4c, 0x0a, 0x77, 0x1f, 0x40, 0x35,
	0x31, 0x24, 0x52, 0x83, 0x72, 0x7f, 0xb0, 0xbd, 0x7b, 0xd2, 0x7f, 0xba, 0xd7, 0x5a, 0x22, 0x00,
	0xa5, 0xa3, 0xe3, 0xed, 0xde, 0x5e, 0xaf, 0xa5, 0x71, 0xcb, 0xd1, 0xf6, 0xe9, 0x60, 0xf7, 0x70,
	0xaf, 0xd7, 0xca, 0x75, 0xff, 0x2a, 0x41, 0xd9, 0xc0, 0x89, 0x43, 0x59, 0x70, 0x49, 0xbe, 0x82,
	0x1b, 0x07, 0xc8, 0x16, 0xce, 0x4d, 0x33, 0x49, 0x19, 0x86, 0xc1, 0xfa, 0xca, 0xcb, 0xd3, 0xa4,
	0x64, 0x0b, 0x5a, 0x8b, 0x50, 0x32, 0x27, 0x1b, 0x67, 0xee, 0xfa, 0x4d, 0x21, 0x66, 0x92, 0x65,
	0xf9, 0x00, 0x59, 0x16, 0xa4, 0x31, 0x87, 0x08, 0xf3, 0x6d, 0x28, 0x2b, 0xcf, 0x8c, 0xbc, 0x20,
	0x56, 0x50, 0xf2, 0x05, 0xd4, 0x95, 0xa3, 0xba, 0x03, 0x57, 0xd3, 0xd7, 0x9d, 0x82, 0x34, 0xd3,
	0x5a, 0x8e, 0x23, 0xbb, 0x2e, 0x9a, 0x81, 0xe0, 0x4d, 0x7c, 0xd7, 0x2f, 0x64, 0x75, 0x43, 0x88,
	0xc9, 0x0b, 0x9a, 0xdc, 0x05, 0xd8, 0x0d, 0xd0, 0x64, 0x32, 0xcd, 0x39, 0xf7, 0xb2, 0x7c, 0x37,
	0xa1, 0xda, 0x43, 0xca, 0x02, 0xff, 0x32, 0xab, 0xe4, 0x0c, 0x40, 0x17, 0xea, 0xe9, 0x7c, 0x1a,
	0xd1, 0x57, 0x4b, 0xca, 0x59, 0x98, 0xfb, 0xd0, 0x34, 0xf0, 0xdc, 0x4f, 0x3c, 0x8d, 0x6f, 0x10,
	0xe8, 0x11, 0xd4, 0x53, 0xaf, 0x29, 0x59, 0x93, 0xa3, 0xce, 0x78, 0x61, 0xb3, 0xe0, 0x0f, 0xa1,
	0x96, 0xfc, 0x40, 0x90, 0x76, 0x8a, 0x28, 0x89, 0x87, 0x3f, 0x1b, 0x4c, 0x86, 0x72, 0x62, 0x49,
	0x1a, 0x67, 0xdc, 0x1c, 0x59, 0xe0, 0x6f, 0xa0, 0x91, 0xfe, 0x61, 0x90, 0x75, 0x55, 0x2c, 0x7d,
	0xb3, 0xe8, 0x5b, 0x50, 0xdd, 0x9e, 0xa0, 0xc7, 0xf6, 0x2e, 0xd0, 0x63, 0x94, 0xbc, 0xad, 0x78,
	0xb7, 0xf0, 0xc5, 0x54, 0xc8, 0xe4, 0xaf, 0xf2, 0x73, 0x8d, 0x3c, 0x84, 0x92, 0xfa, 0xc1, 0xde,
	0x7c, 0xf9, 0x0b, 0x2c, 0x23, 0xb6, 0x5f, 0xf5, 0x37, 0xde, 0x29, 0xfc, 0xf1, 0xe7, 0x2d, 0x6d,
	0x5c, 0x12, 0x5f, 0xf3, 0xfb, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x47, 0xdf, 0x82, 0xfe,
	0x0b, 0x00, 0x00,
}
